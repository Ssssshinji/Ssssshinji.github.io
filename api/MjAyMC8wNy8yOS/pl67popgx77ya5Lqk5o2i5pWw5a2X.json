{"title":"问题1：交换数字","date":"2020-07-29T06:29:09.000Z","date_formatted":{"ll":"Jul 29, 2020","L":"07/29/2020","MM-DD":"07-29"},"link":"2020/07/29/问题1：交换数字","tags":["中等难题"],"categories":["算法练习"],"updated":"2020-07-30T04:34:51.414Z","content":"<h2 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h2>\n<p><font size=4>  编写一个函数，不用临时变量，直接交换两个数。（提示在页尾）</font></p>\n<h2 id=\"个人思路\">个人思路<a title=\"#个人思路\" href=\"#个人思路\"></a></h2>\n<p>  只要知道两个数的差，一个与之相减，一个与之相加即可得到另一个。我们要做的只是想办法不使用中间变量存储这个差值。</p>\n<h2 id=\"个人解答\">个人解答<a title=\"#个人解答\" href=\"#个人解答\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static void Exchange(ref int a,ref int b)&#123;</span><br><span class=\"line\">    if(a &gt;&#x3D; b)&#123;</span><br><span class=\"line\">        a &#x3D; a - b;</span><br><span class=\"line\">        b &#x3D; a + b;</span><br><span class=\"line\">        a &#x3D; b - a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else&#123;</span><br><span class=\"line\">        a &#x3D; b - a;</span><br><span class=\"line\">        b &#x3D; b - a;</span><br><span class=\"line\">        a &#x3D; a + b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目解析\">题目解析<a title=\"#题目解析\" href=\"#题目解析\"></a></h2>\n<p>  我们还可以用位操作实现类似的解法，这种解法的优点在于它适用的数据类型更多，不仅限于整数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;以a &#x3D; 101(二进制)和b &#x3D; 110为例</span><br><span class=\"line\">a &#x3D; a^b; &#x2F;&#x2F;a &#x3D; 101^110 &#x3D; 011</span><br><span class=\"line\">b &#x3D; a^b; &#x2F;&#x2F;b &#x3D; 011^110 &#x3D; 101</span><br><span class=\"line\">a &#x3D; a^b; &#x2F;&#x2F;a &#x3D; 011^101 &#x3D; 110</span><br></pre></td></tr></table></figure>\n<p>  这段代码使用了异或操作，要了解个中细节，最简单的方法就是看看单个比特位的情况，一探究竟。如能正确交换两个比特位，整个操作就能正确无误地进行。<br>\n  让我们使用x和y两个比特位，逐行解析交换过程。<br>\n  1. x=x^y该行本质上是在检查x与y是否相等。当且只当x!=y时，该行的结果为1。<br>\n  2. y=x^y或者：y={x与y相同则取0，x与y不同则取1}^{y的原始值}<br>\n  请注意，将一个比特位与1进行异或操作会翻转该比特位的值，而将一个比特位与0进行异或操作不会对其值进行改变。因此，如果当x!=y时，我们进行y=1^{y原值}操作，y的值将会被翻转，即得到x的原始值。否则，如果当x==y时，我们进行y=0^{y原值}操作，y的值不会发生改变。无论哪种情况，y的值都会与x的原始值相等。<br>\n  3. x=x^y或者：x={x与y相同则取0，x与y不同则取1}^{x的原始值}<br>\n  此时，y的值即为x的原始值。该行代码其实和上面一行的代码相同，只是变量名不同而已。当x与y的值不同时，我们进行x=1^{x原值}操作，x的值将会被翻转。当x与y的值相同时，我们进行x=0^{x原值}操作，x的值不会发生改变。<br>\n  上面描述的操作适用于每一个比特位。因为该方法能够正确地交换两个比特位，所以它也能够正确地交换整个数字。</p>\n<h2 id=\"反思\">反思<a title=\"#反思\" href=\"#反思\"></a></h2>\n<p>  记住和0异或以及和1异或的性质。</p>\n<h2 id=\"提示：#491，#715，#736\">提示：#491，#715，#736<a title=\"#提示：#491，#715，#736\" href=\"#提示：#491，#715，#736\"></a></h2>\n<p>  -尝试在数轴上画出a和b两个数字。<br>\n  -定义diff为a和b之间的差。你能以某种方式使用diff吗？那么你能去掉这个临时变量吗？<br>\n  -你也可以尝试使用XOR。</p>\n","prev":{"title":"问题精析：裁剪技术（Culling Techniques）","link":"2020/07/30/问题精析：裁剪技术（Culling Techniques）"},"next":{"title":"问题精析：柏林噪声代码实现","link":"2020/07/29/问题精析：柏林噪声代码实现"},"plink":"http://Ssssshinji.github.io/2020/07/29/问题1：交换数字/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"个人思路","title":"个人思路","index":"2"},{"id":"个人解答","title":"个人解答","index":"3"},{"id":"题目解析","title":"题目解析","index":"4"},{"id":"反思","title":"反思","index":"5"},{"id":"提示：#491，#715，#736","title":"提示：#491，#715，#736","index":"6"}]}