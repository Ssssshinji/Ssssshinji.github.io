{"title":"问题1：判定字符是否唯一","date":"2020-06-25T07:36:02.000Z","date_formatted":{"ll":"Jun 25, 2020","L":"06/25/2020","MM-DD":"06-25"},"link":"2020/06/25/问题1：判定字符是否唯一","tags":["数组与字符串"],"categories":["算法练习"],"updated":"2020-06-25T09:16:33.958Z","content":"<h2 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h2>\n<p><font size=4>  实现一个算法，确定一个字符串的所有字符是否不全都不同。假使不允许使用额外的数据结构，又该如何处理？（提示在页尾）</font></p>\n<h2 id=\"个人思路\">个人思路<a title=\"#个人思路\" href=\"#个人思路\"></a></h2>\n<p>  如果可用其他的数据结构，创建一个list，逐个将字符加入到list中。在加入前调用List.Contains()查询是否已经有该字符，有则报错。如果不可用别的数据结构，按照ASCII码排序，再看是否有相邻字符相等，或者拿每一个和剩下的字符比较。</p>\n<h2 id=\"个人解答（使用数据结构）\">个人解答（使用数据结构）<a title=\"#个人解答（使用数据结构）\" href=\"#个人解答（使用数据结构）\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Boolean isUnique(string str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ArrayList list &#x3D; new ArrayList();</span><br><span class=\"line\">    for (int i &#x3D; 0; i &lt; str.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (!list.Contains(str[i]))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            list.Add(str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目解析\">题目解析<a title=\"#题目解析\" href=\"#题目解析\"></a></h2>\n<p>  -要关注字符串是ASCII串还是Unicode串，这关系到你需要使用的数组大小（在标准解答中，按照ASCII处理）<br>\n  -如果字符串长度超过了字母表中不同字符的个数(ASCII:128)，直接返回false</p>\n<h2 id=\"标准解答（使用数据结构）\">标准解答（使用数据结构）<a title=\"#标准解答（使用数据结构）\" href=\"#标准解答（使用数据结构）\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Boolean isUnique(string str)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if(str.Length &gt; 128)return false;</span><br><span class=\"line\">    bool[] char_set &#x3D; new bool[128];</span><br><span class=\"line\">    for(int i &#x3D; 0; i &lt; str.Length; i++)&#123;</span><br><span class=\"line\">        int val &#x3D; str[i];</span><br><span class=\"line\">        &#x2F;&#x2F;在字符串中已找到过</span><br><span class=\"line\">        if(char_set[val])&#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        char_set[val] &#x3D; true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"复杂度分析\">复杂度分析<a title=\"#复杂度分析\" href=\"#复杂度分析\"></a></h2>\n<p>  这段代码的时间复杂度为O(n)，其中n为字符串长度。空间复杂度为O(1)。你也可以认为时间复杂度是O(1)，因为for循环的迭代永远不会超过128次。如果不想假设字符集是恒定的，也可以认为空间复杂度是O(c )，时间复杂度是O(min(c,n))或者O(c )，其中c是字符集的大小。</p>\n<h2 id=\"不使用数据结构的情况\">不使用数据结构的情况<a title=\"#不使用数据结构的情况\" href=\"#不使用数据结构的情况\"></a></h2>\n<p>  思路和自己的思路相同，无代码解析。</p>\n<h2 id=\"反思\">反思<a title=\"#反思\" href=\"#反思\"></a></h2>\n<p>  没有注意到字符数量是有限的，从而利用数组解决问题。类似的使用数组的方式还有很多，需要注意。</p>\n<h2 id=\"提示\">提示<a title=\"#提示\" href=\"#提示\"></a></h2>\n<p>  -用散列表试试<br>\n  -位向量有用吗<br>\n  -你能用O(NlogN)的时间复杂度解决它吗</p>\n","next":{"title":"算法常见面试题1-5","link":"2020/06/24/算法常见面试题1-5"},"plink":"http://Ssssshinji.github.io/2020/06/25/问题1：判定字符是否唯一/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"个人思路","title":"个人思路","index":"2"},{"id":"个人解答（使用数据结构）","title":"个人解答（使用数据结构）","index":"3"},{"id":"题目解析","title":"题目解析","index":"4"},{"id":"标准解答（使用数据结构）","title":"标准解答（使用数据结构）","index":"5"},{"id":"复杂度分析","title":"复杂度分析","index":"6"},{"id":"不使用数据结构的情况","title":"不使用数据结构的情况","index":"7"},{"id":"反思","title":"反思","index":"8"},{"id":"提示","title":"提示","index":"9"}]}