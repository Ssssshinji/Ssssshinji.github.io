{"title":"问题9：字符串轮转","date":"2020-08-05T07:22:42.000Z","date_formatted":{"ll":"Aug 5, 2020","L":"08/05/2020","MM-DD":"08-05"},"link":"2020/08/05/问题9：字符串轮转","tags":["数组与字符串"],"categories":["算法练习"],"updated":"2020-08-05T08:12:09.364Z","content":"<h2 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h2>\n<p><font size=4>  假定有一种isSubstring方法，可检查一个单词是否为其他字符串的子串。给定两个字符串s1和s2，请编写代码检查s2是否为s1旋转而成，要求只能调用一次isSubstring（比如，waterbottle是erbottlewat旋转后的字符串）。</font></p>\n<h2 id=\"个人思路\">个人思路<a title=\"#个人思路\" href=\"#个人思路\"></a></h2>\n<p>  轮转过的字符从某一索引开始遍历和原字符是完全相同的。利用这一特点编写方法。</p>\n<h2 id=\"个人解答\">个人解答<a title=\"#个人解答\" href=\"#个人解答\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;我并没有调用substring</span><br><span class=\"line\">static bool isRotation(string s1, string s2)&#123;</span><br><span class=\"line\">    char[] c1 &#x3D; s1.ToCharArray();</span><br><span class=\"line\">    char[] c2 &#x3D; s2.ToCharArray();</span><br><span class=\"line\">    if(c1.Length !&#x3D; c2.Length)&#123;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int index1;</span><br><span class=\"line\">    for(index1 &#x3D; 0; index1 &lt; c1.Length; index1++)&#123;</span><br><span class=\"line\">        int sameAmount &#x3D; 0;</span><br><span class=\"line\">        for(int i &#x3D; 0; i&lt;c1.Length;i++)&#123;</span><br><span class=\"line\">            if(c1[(index1 + i)%c1.Length] &#x3D;&#x3D; c2[i])&#123;</span><br><span class=\"line\">                sameAmount++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(sameAmount &#x3D;&#x3D; c1.Length)return true;     </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"复杂度分析\">复杂度分析<a title=\"#复杂度分析\" href=\"#复杂度分析\"></a></h2>\n<p>  O(n^2)。因为需要访问n^2个元素。</p>\n<h2 id=\"题目解析\">题目解析<a title=\"#题目解析\" href=\"#题目解析\"></a></h2>\n<p>  假定s2由s1旋转而成，那么，我们可以找出旋转点在哪儿。例如，若以wat对waterbottle旋转，就会得到erbottlewat。在旋转字符串时，会把s1切分为两部分：x和y，并将它们重新组合成s2。<br>\n  因此，我们需要确认有没有办法将s1切分为x和y，以满足xy=s1和yx=s2。不论x和y之间的分割点在何处，我们会发现yx肯定是xyxy的子串，也即，s2总是s1s1的子串。<br>\n  上述分析正是这个问题的解法：直接调用isSubstring(s1s1,s2)即可。</p>\n<h2 id=\"标准解答\">标准解答<a title=\"#标准解答\" href=\"#标准解答\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static bool isRotation(string s1, string s2)&#123;</span><br><span class=\"line\">    int len &#x3D; s1.Length;</span><br><span class=\"line\">    if(len &#x3D;&#x3D; s2.Length &amp;&amp; len &gt; 0)&#123;</span><br><span class=\"line\">            &#x2F;&#x2F;在新空间里将s1与s2合并</span><br><span class=\"line\">        string s1s1 &#x3D; s1+s1;</span><br><span class=\"line\">        return IsSubstring(s1s1,s2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"反思\">反思<a title=\"#反思\" href=\"#反思\"></a></h2>\n<p>  花了一个多小时考虑细节写出来的代码，感觉稳的一批。不过标准答案还是更加漂亮。而且又忘了边界检查。</p>\n<h2 id=\"提示：#34，#88，#104\">提示：#34，#88，#104<a title=\"#提示：#34，#88，#104\" href=\"#提示：#34，#88，#104\"></a></h2>\n<p>  -如果一个字符串是另一个字符串的旋转，那么它就是在某个特定点上的旋转。例如，字符串waterbottle在3处的旋转意味着在第三个字符处切割waterbottle，并在左半部分（wat）之前放置右半部分（erbottle）<br>\n  -本质上，我们是在寻找是否有一种方式可以把第一个字符串分成两部分，即x和y，如此一来，第一个字符串就是xy，第二个字符串就是yx。例如，x=wat，y=erbottle。那么，第一个字符串xy=waterbottle，第二个字符串yx=erbottlewat。<br>\n  -想想前面的提示。再想想当你将erbottlewat与它本身连接会发生什么。你得到了erbottlewaterbottlewat。</p>\n","prev":{"title":"问题精析：蒙皮原理","link":"2020/08/06/问题精析：蒙皮原理"},"next":{"title":"问题8：零矩阵","link":"2020/08/05/问题8：零矩阵"},"plink":"http://Ssssshinji.github.io/2020/08/05/问题9：字符串轮转/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"个人思路","title":"个人思路","index":"2"},{"id":"个人解答","title":"个人解答","index":"3"},{"id":"复杂度分析","title":"复杂度分析","index":"4"},{"id":"题目解析","title":"题目解析","index":"5"},{"id":"标准解答","title":"标准解答","index":"6"},{"id":"反思","title":"反思","index":"7"},{"id":"提示：#34，#88，#104","title":"提示：#34，#88，#104","index":"8"}]}